{
  "rules": {
    // Por defecto, nadie puede leer o escribir. La seguridad es lo primero.
    ".read": false,
    ".write": false,

    // Una lista de UIDs de los administradores.
    // Solo los administradores podrán escribir en esta lista.
    "admins": {
      ".read": "root.child('admins').child(auth.uid).exists()",
      ".write": "root.child('admins').child(auth.uid).exists()",
      "$uid": {
        ".validate": "newData.isBoolean()"
      }
    },

    // La configuración de la tienda es de lectura pública.
    // Solo los administradores pueden modificarla.
    "config": {
      ".read": true,
      ".write": "root.child('admins').child(auth.uid).exists()",
      ".validate": "newData.hasChildren(['logoUrl', 'contact', 'social']) && newData.child('logoUrl').isString() && newData.child('contact').hasChildren(['name', 'phone', 'schedule']) && newData.child('social').hasChildren(['instagram', 'tiktok', 'whatsapp'])"
    },

    // Los banners son de lectura pública.
    // Solo los administradores pueden modificarlos.
    "banners": {
      ".read": true,
      ".write": "root.child('admins').child(auth.uid).exists()",
      "$bannerId": {
        ".validate": "newData.hasChildren(['id', 'imageUrl', 'title', 'subtitle', 'link'])"
      }
    },

    // Las categorías son de lectura pública.
    // Solo los administradores pueden modificarlas.
    "categories": {
      ".read": true,
      ".write": "root.child('admins').child(auth.uid).exists()",
      "$categoryId": {
        ".validate": "newData.isString()"
      }
    },

    // Los productos son de lectura pública.
    // Solo los administradores pueden modificarlos.
    "products": {
      ".read": true,
      ".write": "root.child('admins').child(auth.uid).exists()",
      "$productId": {
        ".validate": "newData.hasChildren(['id', 'name', 'description', 'price', 'category', 'imageUrl', 'available', 'variants']) && newData.child('price').isNumber()"
      }
    },

    // Los pedidos son la parte más sensible.
    "orders": {
      // Solo los administradores pueden leer la lista completa de pedidos.
      ".read": "root.child('admins').child(auth.uid).exists()",

      // Regla para escribir en la lista de pedidos.
      // Un administrador puede sobreescribir toda la lista (útil para backups, aunque no se usa en la app).
      ".write": "root.child('admins').child(auth.uid).exists()",
      
      // Regla para pedidos individuales.
      "$orderId": {
        // CUALQUIER usuario (incluso no autenticado) puede crear un NUEVO pedido.
        // `!data.exists()` asegura que solo se puedan crear entradas nuevas, no sobreescribir existentes.
        ".write": "!data.exists()",
        ".validate": "newData.hasChildren(['id', 'date', 'customerName', 'customerPhone', 'items', 'subtotal', 'shippingCost', 'total', 'deliveryMethod', 'paymentMethod'])"
      }
    }
  }
}
